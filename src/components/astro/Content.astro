---
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

const { data } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>(
  "/src/assets/*.{jpeg,jpg,png,gif,webp}"
);
if (!images[data.imagePath])
  throw new Error(
    `"${data.imagePath}" does not exist in glob: "src/assets/*.{jpeg,jpg,png,gif,webp}"`
  );
---

<div
  class="overflow-hidden bg-gradient-to-b from-primary-900 to-90% to-primary-800 px-6 py-24 sm:py-32 lg:overflow-visible lg:px-0"
>
  <div
    class="mx-auto grid max-w-2xl grid-cols-1 gap-x-8 gap-y-16 lg:mx-0 lg:max-w-none lg:grid-cols-2 lg:items-start lg:gap-y-10"
  >
    <div
      class="lg:col-span-2 lg:col-start-1 lg:row-start-1 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8"
    >
      <div class="lg:pr-4">
        <div class="lg:max-w-lg">
          <p
            class="text-base font-semibold leading-7 text-accent-700 uppercase"
          >
            {data.upperHeading}
          </p>
          <h1
            class="mt-0 text-3xl font-bold tracking-tight text-muted-200 sm:text-4xl"
          >
            {data.heading}
          </h1>
          <p
            class="mt-6 text-xl leading-8 text-muted-200 pr-10"
            set:html={data.description}
          />
        </div>
      </div>
    </div>
    <div
      class="lg:-ml-12 lg:-mt-12 col-span-1 lg:max-w-2xl aspect-square md:aspect-auto rounded-md lg:h-screen lg:sticky lg:top-8 lg:col-start-2 lg:row-span-2 lg:row-start-1 overflow-hidden"
    >
      <Image
        src={images[data.imagePath]()}
        alt={data.imageAlt}
        class="w-full object-cover h-full lg:min-h-screen md:ml-10"
        quality={100}
      />
    </div>
    <div
      class="lg:col-span-2 lg:col-start-1 lg:row-start-2 lg:mx-auto lg:grid lg:w-full lg:max-w-7xl lg:grid-cols-2 lg:gap-x-8 lg:px-8"
    >
      <div class="lg:pr-4">
        <div
          class="max-w-2xl text-base leading-relaxed text-muted-200 lg:max-w-lg"
        >
          <div>
            {
              data.paragraphs.map((paragraph) => (
                <p class="mt-2 pr-10" set:html={paragraph} />
              ))
            }
          </div>
          {
            data.list && (
              <div class="mt-12">
                <h4 class="text-2xl font-bold tracking-tight text-muted-400">
                  {data.list.heading}
                </h4>
                <ul role="list" class="mt-4 space-y-8 text-muted-400 max-w-md">
                  {data.list.items.map((item) => (
                    <li class="flex gap-x-3">
                      <svg
                        class="mt-1 size-8 flex-none text-accent-600"
                        viewBox="0 0 24 24"
                        fill="none"
                        stroke="currentColor"
                        stroke-width="2"
                        aria-hidden="true"
                      >
                        <path
                          fill-rule="evenodd"
                          d={item.icon}
                          clip-rule="evenodd"
                        />
                      </svg>
                      <span class="leading-snug">
                        <strong class="font-bold text-muted-500 tracking-tight uppercase">
                          {item.title}
                        </strong>{" "}
                        {item.descriptions.map((dec) => (
                          <p class="mb-2" set:html={dec} />
                        ))}
                      </span>
                    </li>
                  ))}
                </ul>
              </div>
            )
          }
          {
            data.afterListParagraphs && (
              <div class="mt-8 text-muted-200 font-medium">
                {data.afterListParagraphs.map((paragraph) => (
                  <p class="mt-2" set:html={paragraph} />
                ))}
              </div>
            )
          }
          {
            data.finalSection && (
              <>
                <h2 class="mt-16 text-2xl font-bold tracking-tight text-muted-900">
                  {data.finalSection.heading}
                </h2>
                <div class="mt-6">
                  {data.finalSection.descriptions.map((desc) => (
                    <p class="mt-2" set:html={desc} />
                  ))}
                </div>
              </>
            )
          }
          {
            data.finalButton && (
              <div class="mt-6 flex flex-wrap justify-center w-full align-middle items-center gap-6 z-10">
                <a
                  href={data.finalButton.link}
                  class={`${data.finalButton.primary ? "btn-accent" : "btn-white"} w-full md:w-auto`}
                >
                  {data.finalButton.name}
                </a>
              </div>
            )
          }
        </div>
      </div>
    </div>
  </div>
</div>