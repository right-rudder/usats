---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "../components/ui/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import { COMPANY_NAME } from "../consts";
import type { BreadcrumbItem } from "../utils/breadcrumbs";

type Props = CollectionEntry<"blog">["data"];

const {
  title,
  author,
  category,
  description,
  pubDate,
  updatedDate,
  heroImage,
  tags,
} = Astro.props;

// Create custom breadcrumbs for blog posts
const blogBreadcrumbs: BreadcrumbItem[] = [
  { name: "Blog", url: "/blog" },
  { name: title, url: Astro.url.pathname, isActive: true },
];
---

<BaseLayout
  siteTitle={title + ` | Blog | ${COMPANY_NAME}`}
  siteDescription={description}
  keywords={tags?.join(", ")}
  ogImage={heroImage}
  customBreadcrumbs={blogBreadcrumbs}
  breadcrumbTitle={title}
>
  <div class="h-20 lg:h-28 w-full bg-primary-900"></div>

  <section
    class="flex justify-center items-start align-top pt-4 pb-20 bg-gradient-to-b from-primary-800 to-primary-950"
  >
    <article
      class="max-w-4xl flex flex-col justify-center bg-white align-middle items-center rounded-md overflow-hidden"
    >
      <div class="w-full aspect-video">
        {
          heroImage && (
            <img
              class="object-cover w-full h-full"
              src={heroImage}
              alt={title}
            />
          )
        }
      </div>
      <div class="font-sans py-12">
        <div class="flex flex-col gap-6 px-6 lg:px-12">
          <div class="font-light text-muted-700">
            <FormattedDate date={pubDate} />
            {
              updatedDate && (
                <div class="last-updated-on text-muted-200">
                  Last updated on <FormattedDate date={updatedDate} />
                </div>
              )
            }
          </div>
          <h1 class="text-5xl font-sans leading-tight text-muted-600">
            {title}
          </h1>
          <p class="-mt-3 text-muted-700">by <strong>{author}</strong></p>
          <div class="md:flex gap-2 hidden">
            <span
              class="bg-accent-600 text-white inline-block text-xs px-3 py-1 rounded-md"
            >
              {category}
            </span>
            {
              tags
                .slice(0, 3)
                .map((tag, index) => (
                  <span
                    class={`bg-primary-500 text-white text-xs capitalize inline-block px-3 py-1 rounded-md`}
                  >
                    {tag}
                  </span>
                ))
            }
          </div>
          <hr />
        </div>
        <div
          class="prose mx-auto flex justify-center prose-h2:uppercase prose-p:text-muted-900 prose-a:text-muted-800 prose-li:text-muted-800 prose-img:aspect-square lg:prose-img:aspect-auto prose-img:object-cover lg:prose-img:object-contain"
        >
          <slot />
        </div>
      </div>
    </article>
  </section>
</BaseLayout>
