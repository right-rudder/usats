---
import BaseLayout from "../layouts/BaseLayout.astro";
import { IoPhonePortraitOutline } from "react-icons/io5";
import { IoLocationOutline } from "react-icons/io5";
import { TfiEmail } from "react-icons/tfi";
import contact from "../data/contact";
import { COMPANY_NAME } from "../consts";

const { data } = contact;

const CONTACT_US_FORM_WEBHOOK_URL = import.meta.env.CONTACT_US_FORM_WEBHOOK_URL;


---

<BaseLayout
  siteTitle={data.pageTitle}
  siteDescription={data.pageDescription}
  keywords={data.pageKeywords}
>
  <section
    class="px-6 pt-12 pb-16 lg:pb-4 min-h-screen bg-gradient-to-tr from-primary-800/90 to-primary-950/90"
  >
    <div class="max-w-7xl mx-auto">
      <div class="flex flex-wrap justify-center align-top items-start">
        <!-- Location 1 -->
        <div
          class="order-last w-full lg:w-1/4 lg:order-first px-8 text-right mt-16"
        >
          <h3 class="text-primary-100 text-2xl font-semibold mt-10">
            {data.locations[0].title}
          </h3>
          <a href={data.locations[0].gMaps}>
            <div class="flex justify-end gap-3 mt-5 hover:underline">
              <p class="text-gray-50">
                {data.locations[0].address}<br />{data.locations[0].city}, {
                  data.locations[0].state
                }
                {data.locations[0].zip}
              </p>
              <IoLocationOutline
                className="lg:size-8 size-6 text-primary-100"
              />
            </div>
          </a>
          <a href={`tel:${data.locations[0].phone}`}>
            <div class="flex justify-end gap-3 mt-5 hover:underline">
              <p class="text-gray-50">{data.locations[0].phone}</p>
              <IoPhonePortraitOutline
                className="lg:size-8 size-6 text-primary-100"
              />
            </div>
          </a>
        </div>
        <form
          id="contact-form"
          class="flex flex-col rounded-b-xl max-w-2xl mx-auto gap-5 mt-8 lg:mt-12 p-4 lg:p-12 bg-black/30 w-full lg:w-1/2 shadow-xl h-full"
        >
          <h2 class="text-accent-900 text-5xl font-extrabold mx-auto w-fit">
            Get in touch
          </h2>
          <!-- Name -->
          <div class="flex flex-col lg:flex-row gap-5">
            <input
              type="text"
              name="first-name"
              placeholder="Your first name"
              class="px-5 py-4 outline-1 w-full border-primary-100border outline-gray-500 placeholder:text-primary/60"
              required
            />
            <input
              type="text"
              name="last-name"
              placeholder="Your last name"
              class="px-5 py-4 outline-1 w-full border-primary-100border outline-gray-500 placeholder:text-primary/60"
              required
            />
          </div>
          <!-- Contact Info -->
          <div class="flex flex-col lg:flex-row gap-5">
            <input
              id="email"
              type="email"
              name="email"
              placeholder="Your email"
              class="px-5 py-4 outline-1 w-full border-primary-100border outline-gray-500 placeholder:text-primary/60"
              required
            />
            <input
              type="email"
              name="confirm-email"
              placeholder="Confirm email"
              class="hidden px-5 py-4 outline-1 w-full border-primary-100border outline-gray-500 placeholder:text-primary/60"
            />
            <input
              type="tel"
              name="phone"
              placeholder="Your phone number"
              class="px-5 py-4 outline-1 w-full border-primary-100border outline-gray-500 placeholder:text-primary/60"
              required
            />
          </div>
          <!-- Interest -->
          <fieldset id="flight-training-interest-fieldset" class="flex flex-col gap-3 mt-4">
            <label
              class="text-muted-300 text-xl font-semibold text-center w-full"
            >
              Are you interested in flight training at {COMPANY_NAME}? <span class="text-red-500">*</span>
            </label>
            <div class="flex gap-6 justify-center">
              <div class="flex items-center gap-2">
                <input
                  type="radio"
                  name="interest-flight-training"
                  id="interest-flight-training-yes"
                  value="yes"
                  required
                  class="w-4 h-4 text-accent-800 focus:ring-accent-900"
                />
                <label for="interest-flight-training-yes" class="text-muted-300">Yes</label>
              </div>
              <div class="flex items-center gap-2">
                <input
                  type="radio"
                  name="interest-flight-training"
                  id="interest-flight-training-no"
                  value="no"
                  required
                  class="w-4 h-4 text-accent-800 focus:ring-accent-900"
                />
                <label for="interest-flight-training-no" class="text-muted-300">No</label>
              </div>
            </div>
          </fieldset>

        <!-- Aircraft type -->
        <fieldset
          id="aircraft-type-fieldset"
          class="flex flex-col justify-center items-center align-middle mt-6 hidden"
        >
          <legend
            class="mb-2 text-xl font-semibold text-muted-300 text-center w-full"
          >
            Which aircraft type are you interested in? <span
              class="text-red-500">*</span
            >
          </legend>
          <div class="flex gap-6">
            <div class="flex items-center gap-2">
              <input
                type="radio"
                id="airplane-type"
                name="aircraft-type"
                value="Airplane"
                required
                class="w-4 h-4 text-accent-800 focus:ring-accent-900"
              />
              <label for="airplane-type" class="text-muted-300">Airplane</label>
            </div>
            <div class="flex items-center gap-2">
              <input
                type="radio"
                id="helicopter-type"
                name="aircraft-type"
                value="Helicopter"
                required
                class="w-4 h-4 text-accent-800 focus:ring-accent-900"
              />
              <label for="helicopter-type" class="text-muted-300"
                >Helicopter</label
              >
            </div>
            <div class="flex items-center gap-2">
              <input
                type="radio"
                id="both-type"
                name="aircraft-type"
                value="Both"
                class="w-4 h-4 text-accent-800 focus:ring-accent-900"
              />
              <label for="both-type" class="text-muted-300"
                >Both</label
              >
            </div>
          </div>
        </fieldset>

        <!-- Airplane Program Options (conditionally shown) -->
        <fieldset
          id="airplane-program-fieldset"
          class="flex flex-col justify-center items-center align-middle mt-4"
          style="display: none;"
        >
          <legend
            class="mb-2 text-muted-300 text-xl font-semibold text-center w-full"
          >
            Airplane Program Interest? <span class="text-red-500"
              >*</span
            >
          </legend>
          <div
            id="airplane-program-options-container"
            class="hidden flex flex-col gap-2"
          >
            <!-- Options will be populated by JavaScript -->
          </div>
        </fieldset>
        <!-- Helicopter Program Options (conditionally shown) -->
        <fieldset
          id="helicopter-program-fieldset"
          class="flex flex-col justify-center items-center align-middle mt-4"
          style="display: none;"
        >
          <legend class="mb-2 text-muted-300 text-xl font-semibold text-center w-full">
            Helicopter Program Interest? <span class="text-red-500">*</span>
          </legend>
          <div id="helicopter-program-options-container" class="flex flex-col gap-2">
            <!-- Options will be populated by JavaScript -->
          </div>
        </fieldset>

          <!-- Message -->
          <textarea
            required
            name="message"
            placeholder="Your message"
            class="px-5 py-4 outline-1 border-primary-100border outline-gray-500 min-h-48 placeholder:text-primary/60"
          ></textarea>

          <div class="flex gap-3">
            <input
              type="checkbox"
              name="agree-data-collection"
              id="agree-data-collection"
            />

            <label
              for="agree-data-collection"
              class="text-muted-300 text-sm lg:text-base"
              set:html={data.checkboxText}
            >
            </label>
          </div>
          <button
            id="submit-button"
            form="contact-form"
            disabled
            type="submit"
            class="mx-auto mt-8 btn-primary cursor-not-allowed bg-accent-900 hover:bg-accent-700 hover:text-white"
            >Send message</button
          >
        </form>

      </div>
    </div>
  </section>

  <script define:vars={{ CONTACT_US_FORM_WEBHOOK_URL }}>
    const trainingPrograms = {
      Airplane: [
        { value: "private-pilot-license", text: "Private Pilot License" },
        { value: "instrument-rating", text: "Instrument Rating" },
        { value: "commercial-pilot-license", text: "Commercial Pilot License" },
        { value: "cfi", text: "Flight Instructor (CFI)" },
        { value: "cfii", text: "Flight Instructor Instrument (CFII)" },
        { value: "professional-pilot-program", text: "Professional Pilot Program" },
        { value: "other-airplane", text: "Other Airplane Interest" },
      ],
      Helicopter: [
        { value: "private-pilot-license-h", text: "Private Pilot License- Helicopter" },
        { value: "instrument-rating-h", text: "Instrument Rating - Helicopter" },
        { value: "commercial-pilot-license-h", text: "Commercial Pilot License - Helicopter" },
        { value: "cfi-h", text: "Flight Instructor - Helicopter" },
        { value: "cfii-h", text: "Flight Instructor Instrument - Helicopter" },
        { value: "professional-pilot-program-h", text: "Professional Pilot Program - Helicopter" },
        { value: "military-transition", text: "Military Transition Training" },
        { value: "other-helicopter", text: "Other Helicopter Interest" },
      ],
    };

    const checkbox = document.getElementById("agree-data-collection");
    const submitButton = document.getElementById("submit-button");

    const flightTrainingInterestRadios = document.querySelectorAll('input[name="interest-flight-training"]');
    const aircraftTypeFieldset = document.getElementById("aircraft-type-fieldset");
    const aircraftTypeRadios = document.querySelectorAll('input[name="aircraft-type"]');

    const airplaneProgramFieldset = document.getElementById("airplane-program-fieldset");
    const airplaneContainer = document.getElementById("airplane-program-options-container");
    const helicopterProgramFieldset = document.getElementById("helicopter-program-fieldset");
    const helicopterContainer = document.getElementById("helicopter-program-options-container");

    function setRequiredForRadioGroup(groupName, isRequired) {
        const radios = document.querySelectorAll(`input[name="${groupName}"]`);
        radios.forEach(radio => {
            if (isRequired) {
                radio.setAttribute('required', 'required');
            } else {
                radio.removeAttribute('required');
            }
        });
    }

    function toggleFlightTrainingSpecificFields(show) {
      if (show) {
        aircraftTypeFieldset.style.display = "flex"; // Or 'block' or your preferred display type
        setRequiredForRadioGroup("aircraft-type", true);
        // Trigger update of program sections based on current aircraft type selection (if any)
        const selectedAircraftType = document.querySelector('input[name="aircraft-type"]:checked');
        updateDynamicProgramSections(selectedAircraftType ? selectedAircraftType.value : null);
      } else {
        aircraftTypeFieldset.style.display = "none";
        setRequiredForRadioGroup("aircraft-type", false);
        // Also hide and reset program sections
        airplaneProgramFieldset.style.display = "none";
        airplaneContainer.classList.add("hidden");
        setRequiredForRadioGroup("airplane-interest", false);

        helicopterProgramFieldset.style.display = "none";
        helicopterContainer.classList.add("hidden");
        setRequiredForRadioGroup("helicopter-interest", false);

        // Clear any selected aircraft type
        aircraftTypeRadios.forEach(radio => radio.checked = false);
      }
    }

    checkbox.addEventListener("change", function () {
      if (checkbox.checked) {
        submitButton.disabled = false;
        submitButton.classList.remove(
          "cursor-not-allowed",
          "bg-gray-400",
          "hover:bg-gray-400"
        );
      } else {
        submitButton.disabled = true;
        submitButton.classList.add(
          "cursor-not-allowed",
          "bg-gray-400",
          "hover:bg-gray-400"
        );
      }
    });

    flightTrainingInterestRadios.forEach(radio => {
        radio.addEventListener('change', (event) => {
            toggleFlightTrainingSpecificFields(event.target.value === 'yes');
        });
    });

    aircraftTypeRadios.forEach(radio => {
        radio.addEventListener('change', (event) => {
            updateDynamicProgramSections(event.target.value);
        });
    });

    function populateAndDisplayProgramOptions(
        containerElement,
        fieldsetElement,
        programs,
        radioGroupName,
        isVisible
    ) {
        containerElement.innerHTML = ""; // Clear existing options

        if (!isVisible || !programs || programs.length === 0) {
            fieldsetElement.style.display = "none";
            containerElement.classList.add("hidden");
            setRequiredForRadioGroup(radioGroupName, false);
            return;
        }

        fieldsetElement.style.display = "flex"; // Or 'block'
        containerElement.classList.remove("hidden");
        setRequiredForRadioGroup(radioGroupName, true);

        programs.forEach((program) => {
            const wrapper = document.createElement("div");
            wrapper.className = "flex items-center gap-2";
            const inputId = `${radioGroupName}-${program.value.replace(/[^a-zA-Z0-9]/g, '-')}`; // Sanitize value for ID

            const input = document.createElement("input");
            input.type = "radio";
            input.className = "mx-2 text-accent-800 focus:ring-accent-900";
            input.id = inputId;
            input.name = radioGroupName;
            input.value = program.value;
            // 'required' is set on the group by setRequiredForRadioGroup

            const label = document.createElement("label");
            label.className = "text-muted-300";
            label.htmlFor = inputId;
            label.textContent = program.text;

            wrapper.appendChild(input);
            wrapper.appendChild(label);
            containerElement.appendChild(wrapper);
        });
    }

    function updateDynamicProgramSections(selectedAircraftType) {
        const isInterestedInTraining = document.querySelector('input[name="interest-flight-training"]:checked')?.value === 'yes';
        if (!isInterestedInTraining) return; // Don't show if not interested in training

        const showAirplane = selectedAircraftType === "Airplane" || selectedAircraftType === "Both";
        const showHelicopter = selectedAircraftType === "Helicopter" || selectedAircraftType === "Both";

        populateAndDisplayProgramOptions(airplaneContainer, airplaneProgramFieldset, trainingPrograms.Airplane, "airplane-interest", showAirplane);
        populateAndDisplayProgramOptions(helicopterContainer, helicopterProgramFieldset, trainingPrograms.Helicopter, "helicopter-interest", showHelicopter);
    }

    // Wait for the DOM content to be fully loaded
    document.addEventListener("DOMContentLoaded", function () {
      // Get the contactUs form element
      const contactForm = document.getElementById("contact-form");

      // Check if the contactUs form element exists
      if (contactForm !== null) {
        // Add submit event listener to the contactUs form
        contactForm.addEventListener("submit", function (event) {
          // Prevent the default form submission
          event.preventDefault();

          // Serialize the form data
          const formData = new FormData(contactForm);
          const isInterestedInTraining = formData.get("interest-flight-training") === "yes";

          if (isInterestedInTraining) {
            const aircraftType = formData.get("aircraft-type");
            if (!aircraftType) {
              alert("Please select an aircraft type.");
              document.getElementById("airplane-type")?.focus(); // Focus first aircraft type radio
              return;
            }

            let programInterestValid = true;
            if (aircraftType === "Airplane" || aircraftType === "Both") {
              if (!formData.get("airplane-interest")) {
                alert("Please select your Airplane program interest.");
                document.querySelector('#airplane-program-options-container input[type="radio"]')?.focus();
                programInterestValid = false;
              }
            }
            if (aircraftType === "Helicopter" || aircraftType === "Both") {
              if (!formData.get("helicopter-interest")) {
                alert("Please select your Helicopter program interest.");
                document.querySelector('#helicopter-program-options-container input[type="radio"]')?.focus();
                programInterestValid = false;
              }
            }
            if (!programInterestValid) {
              return;
            }
          }




          // Check the value of the honeypot field
          const confirmEmailValue = formData.get("confirm-email");
          if (confirmEmailValue === "" || confirmEmailValue === null) {
            // If the honeypot field is empty, it's a human
            // Set the form action to the URL for processing the form and redirecting to thank you
            contactForm.action = CONTACT_US_FORM_WEBHOOK_URL;
          }

          // Convert FormData to URLSearchParams
          const urlSearchParams = new URLSearchParams();
          for (const pair of formData.entries()) {
            urlSearchParams.append(pair[0], pair[1]);
          }

          // Send an AJAX request to submit the form
          const xhr = new XMLHttpRequest();
          xhr.open("POST", contactForm.action);
          xhr.setRequestHeader(
            "Content-Type",
            "application/x-www-form-urlencoded"
          );
          xhr.onload = function () {
            // Check if the request was successful (status 200)
            if (xhr.status === 200) {
              // Redirect the user after a successful form submission
              window.location.href = "/contact-us-confirmation";
            } else {
              // Handle errors if any
              console.error("Form submission failed:", xhr.status, xhr.statusText, xhr.responseText);
              alert(`There was an error submitting the form (Status: ${xhr.status}). Please try again or contact support.`);
            }
          };
          xhr.onerror = function () {
            // Handle network errors
            console.error("Network error occurred while submitting the form.");
            alert("A network error occurred. Please check your connection and try again.");
          };
          xhr.send(urlSearchParams);
        });
      } else {
        console.error("Contact us form element not found.");
      }

      // Initial state: hide conditional fields
      toggleFlightTrainingSpecificFields(false);
      // Ensure submit button is disabled initially if checkbox isn't checked
      submitButton.disabled = !checkbox.checked;
    });
  </script>

  <script src="../scripts/emailValidation.js"></script>
</BaseLayout>